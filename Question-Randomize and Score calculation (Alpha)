//Use the logic if you like it or you may even make your own

var express = require('express');
var app = express();

//Suppose this is the JSON object of questions generated by the ADMIN

var questions = [
    {QID01: "What is your name", Ans: "1"},
    {QID02: "What is your gender", Ans: "2"},
    {QID03: "Where do you come from ?", Ans: "3"},
    {QID04: "What is your comapny name ?", Ans: "4"}
];

var id = questions.length;
var arr = [];
for (var i = 0; i < id; i++) {
    arr[i] = i;
}

function shuffle(array) {
    var i = 0, j = 0, temp = null;
    for (i = array.length - 1; i > 0; i -= 1) {
        j = Math.floor(Math.random() * (i + 1))
        temp = array[i]
        array[i] = array[j]
        array[j] = temp
    }
}
shuffle(arr);
console.log(arr);

// for (j = 0; j < id; j++) {
//     app.get('/', function (req, res) {
//         var q = questions[arr[j]];
//         res.json(q);
//     })
// }

//Printing questions in the random order where arr [j] gives the randomised order
for (j = 0; j < id; j++) {

    var q = questions[arr[j]];
    console.log(JSON.stringify(q, null, 2));
}
app.listen(process.env.PORT || 3412);

//Suppose the JSON of questions is as follow with value 3 as the answer or to separate questions and options from answer key

var j = [{label: "8", value: "1", value2: "0", value3: "0"},
    {label: "9", value: "7", value2: "2", value3: "6"},
    {label: "10", value: "12", value2: "1", value3: "0"}];

//This function gives the isolated JSON
function makeArray(array, value) {
    return array.map(function (a) {
        // console.log(a);
        return {[value]: a[value]};
    });
}

var val3 = makeArray(questions, 'Ans');

console.log(val3);


//Answer entered by the admin
var q = {
    apti: [4, 3, 4, 1, 2],
    tech: []
}

//The Answer data received from the user is as follow where n=not attempted questions
var a = {
    apti: [4, 3, 1, n, 2],
    tech: [n, n, 1, 3, 4]
};

//Score calculation

count = 0, not = 0
for (m = 0; m < a.apti.length; m++) {
    if (a.apti[m] == "n") not++
    if (q.apti[m] == a.apti[m]) count++;
}

console.log(count, a.apti.length - count - not, not);


//This code block can also be used to find number of nulls or not attempted questions
// var responseArray = JSON.parse(responseData),
//     filteredArray = responseArray.filter(
//         function (obj) {
//             return obj.Status == "active";
//         });
